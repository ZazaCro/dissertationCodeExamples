/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

type    thermalPhaseChangeTwoPhaseSystem;

phases (gas liquid);

phaseChange off;

gas
{
    type            purePhaseModel;
    diameterModel   isothermal;

    isothermalCoeffs
    {
        d0      3e-3;
        p0      101325;
    }
    Sc          0.7;
    residualAlpha   1e-4;
}

liquid
{
    type            purePhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               0.00045;
    }
    Sc              0.7;

    residualAlpha   1e-4;
}

blending
{
    default
    {
        type            linear;
        minFullyContinuousAlpha.gas 0.7;
        minPartlyContinuousAlpha.gas 0.3;
        minFullyContinuousAlpha.liquid 0.7;
        minPartlyContinuousAlpha.liquid 0.3;
    }

    drag
    {
        type            linear;
        minFullyContinuousAlpha.gas 0.7;
        minPartlyContinuousAlpha.gas 0.3;
        minFullyContinuousAlpha.liquid 0.7;
        minPartlyContinuousAlpha.liquid 0.3;
    }

    heatTransfer
    {
        type            linear;
        minPartlyContinuousAlpha.gas 0;
        minFullyContinuousAlpha.gas 1;
        minPartlyContinuousAlpha.liquid 0;
        minFullyContinuousAlpha.liquid 1;
    }

    massTransfer
    {
        type            linear;
        minPartlyContinuousAlpha.gas 0;
        minFullyContinuousAlpha.gas 1;
        minPartlyContinuousAlpha.liquid 0;
        minFullyContinuousAlpha.liquid 1;
    }
}

surfaceTension
(
   (gas and liquid)
    {
        type            constant;
        sigma           0.07;
    }
);

saturationModel
{
    type function1;

    function csvFile;
    functionCoeffs
    {
        nHeaderLine         1;
        refColumn           0;
        componentColumns    (1);
        separator           ",";
        mergeSeparators     no;
        file                "Tsat_water_1_2bar.csv";
        outOfBounds         clamp;
        interpolationScheme linear;
    };
};

aspectRatio
(
    (gas in liquid)
    {
        type            constant;
        E0              1.0;
    }

    (liquid in gas)
    {
        type            constant;
        E0              1.0;
    }
);

drag
(
    (gas in liquid)
    {
        type            IshiiZuber;
        residualRe      1e-4;
        swarmCorrection
        {
            type        none;
        }
    }
    (liquid in gas)
    {
        type            IshiiZuber;
        residualRe      1e-4;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
    (gas in liquid)
    {
    type        constantCoefficient;
    Cvm         0.5;
    }
    (liquid in gas)
    {
    type        constantCoefficient;
    Cvm         0.5;
    }
);

heatTransfer.gas
(
    (gas in liquid)
    {
        type spherical;
        residualAlpha 1e-3;
    }
    (liquid in gas)
    {
        type RanzMarshall;
        residualAlpha 1e-3;
    }
);

heatTransfer.liquid
(
    (gas in liquid)
    {
        type RanzMarshall;
        residualAlpha 1e-3;
    }
    (liquid in gas)
    {
        type spherical;
        residualAlpha 1e-3;
    }
);

phaseTransfer
();

lift
(
    (gas in liquid)
    {
        type    Tomiyama;
    }
);

wallLubrication
(
    (gas in liquid)
    {
        type        Antal;
        Cw1         -0.01;
        Cw2         0.05;
        Cwc         10.0;
        Cwd         6.8;
        p           1.7;
    }
);

turbulentDispersion
(
    (gas in liquid)
    {
        type                Burns;
        sigma               0.7;
        Ctd                 1.0;
        residualAlpha       1e-3; 
    }
);

// Minimum allowable pressure
pMin            10000;


// ************************************************************************* //
